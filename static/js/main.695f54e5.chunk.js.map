{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","key","title","onClick","selectSong","renderList","Component","connect","state","type","payload","selectedSong","duration","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"oOAIMA,E,qLACY,IAAD,OACT,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAAAC,GACxB,OACI,yBAAKC,UAAU,OAAOC,IAAKF,EAAKG,OAC5B,yBAAKF,UAAU,yBACX,4BACIA,UAAU,oBACVG,QAAS,kBAAM,EAAKP,MAAMQ,WAAWL,KAFzC,WAOJ,yBAAKC,UAAU,WACVD,EAAKG,a,+BAQtB,OAAO,yBAAKF,UAAU,mBAAmBL,KAAKU,kB,GAtB/BC,aA8BRC,eAJS,SAAAC,GACpB,MAAO,CAAEX,MAAOW,EAAMX,SAGc,CAAEO,WCjChB,SAAAL,GAEtB,MAAO,CACHU,KAAM,gBACNC,QAASX,KD6BFQ,CAAyCb,GEVzCa,eAJS,SAAAC,GACpB,MAAO,CAAET,KAAMS,EAAMG,gBAGVJ,EArBI,SAAC,GAAc,IAAZR,EAAW,EAAXA,KAClB,OAAIA,EAKA,6BACI,4CACA,qCACYA,EAAKG,MACb,6BAFJ,aAGeH,EAAKa,WATjB,gDCcAC,EAfH,WACR,OACI,yBAAKb,UAAU,qBACZ,yBAAKA,UAAU,UACX,yBAAKA,UAAU,wBACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,wBACX,kBAAC,EAAD,UCOJc,cAAiB,CAC5BjB,MAlBiB,WACjB,MAAO,CACH,CAAEK,MAAO,YAAaU,SAAU,QAChC,CAAEV,MAAO,YAAaU,SAAU,QAChC,CAAEV,MAAO,WAAYU,SAAU,QAC/B,CAAEV,MAAO,qBAAsBU,SAAU,UAc7CD,aAVwB,WAAgC,IAA/BA,EAA8B,uDAAjB,KAAMI,EAAW,uCACvD,MAAoB,kBAAhBA,EAAON,KACAM,EAAOL,QAGXC,KCRXK,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IACzB,kBAAC,EAAD,OAEFC,SAASC,cAAc,Y","file":"static/js/main.695f54e5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectSong } from '../actions';\r\n\r\nclass SongList extends Component {\r\n    renderList() {\r\n        return this.props.songs.map(song => {\r\n            return (\r\n                <div className=\"item\" key={song.title}>\r\n                    <div className=\"right floated content\">\r\n                        <button                             \r\n                            className=\"ui button primary\"\r\n                            onClick={() => this.props.selectSong(song)}\r\n                        >\r\n                            Select\r\n                        </button>                        \r\n                    </div>\r\n                    <div className=\"content\">\r\n                        {song.title}\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <div className=\"ui divided list\">{this.renderList()}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { songs: state.songs };\r\n}\r\n\r\nexport default connect(mapStateToProps, { selectSong })(SongList);\r\n","//Action center\r\nexport const selectSong = song => {\r\n    //Return an action\r\n    return {\r\n        type: 'SONG_SELECTED',\r\n        payload: song\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SongDetail = ({ song }) => {\r\n    if(!song) {\r\n        return <div>Slect a song</div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Details for:</h3>\r\n            <p>\r\n                Title: {song.title}\r\n                <br />\r\n                Duration: {song.duration}\r\n            </p>            \r\n        </div>    \r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return { song: state.selectedSong }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SongDetail);","import React from 'react';\r\nimport SongList from './SongList';\r\nimport SongDetail from './SongDetail';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container grid\">\r\n           <div className=\"ui row\">\r\n               <div className=\"ui column eight wide\">\r\n                   <SongList />\r\n               </div>\r\n               <div className=\"ui column eight wide\">\r\n                   <SongDetail />\r\n               </div>\r\n           </div>           \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\n\r\nconst songsReducer = () => {\r\n    return [\r\n        { title: 'No scrubs', duration: '4:05' },\r\n        { title: 'Marcarena', duration: '2:30' },\r\n        { title: 'All star', duration: '3.15' },\r\n        { title: 'I want it That Way', duration: '1:45' }\r\n    ];\r\n};\r\n\r\nconst selectedSongReducer = (selectedSong=null, action) => {\r\n    if (action.type === 'SONG_SELECTED') {\r\n        return action.payload;\r\n    }\r\n\r\n    return selectedSong;\r\n};\r\n\r\nexport default combineReducers ({\r\n    songs: songsReducer,\r\n    selectedSong: selectedSongReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nReactDOM.render(\r\n    <Provider store={createStore(reducers)}>\r\n        <App />\r\n    </Provider>\r\n    , document.querySelector('#root')\r\n);"],"sourceRoot":""}